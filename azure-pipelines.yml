# Docker
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureContainerRegistry: '{"loginServer":"mycontregistry2404.azurecr.io", "id" : "/subscriptions/ee22c8f0-93df-4b47-925a-d337fef522fe/resourceGroups/Rohan_RG/providers/Microsoft.ContainerRegistry/registries/myContRegistry2404"}'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'up --build --no-start'
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'bba4a0d3-024b-47ac-a06d-c84b43c368fc'
  imageRepository: 'rohansonijonnychipzblazorwebapp'
  containerRegistry: 'mycontregistry2404.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/client/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
